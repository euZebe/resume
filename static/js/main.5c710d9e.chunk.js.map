{"version":3,"sources":["Tag.tsx","ResumeHeader.tsx","Paragraph.tsx","Anchor.tsx","LangSwitch.tsx","AsideContent.tsx","TagsContainer.tsx","LightTag.tsx","AccomplishmentComponent.tsx","Main.tsx","model/ResumeContentType.ts","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["StyledTag","styled","_templateObject","Tag","props","react","children","TagsContainer","ResumeHeader_templateObject","ResumeHeader","_ref","name","title","summaryTags","className","map","tag","src_Tag","key","reducedMarginTop","css","Paragraph_templateObject","Paragraph","text","blocks","split","style","undefined","block","index","StyledAnchor","Anchor_templateObject","Anchor","link","label","href","fa","Container","LangSwitch_templateObject","LangSwitch","lang","react_default","a","createElement","location","protocol","host","pathname","AsideContent_templateObject","Image","_templateObject2","H3","_templateObject3","LinksContainer","_templateObject4","BigIconLink","_templateObject5","AnchorsContainer","_templateObject6","AsideContent","_props$resume$identit","resume","identity","phone","email","phoneNumberWithoutSpace","replace","about","summary","links","linkedInLink","find","githubLink","talkLink","AsideContent_Container","src_LangSwitch","src","src_Paragraph","concat","size","url","id","src_Anchor","TagsContainer_templateObject","Styled","LightTag_templateObject","LightTag","this","React","AccomplishmentComponent","_this$props","description","tags","src_TagsContainer","t","src_LightTag","ExperiencesContainer","Main_templateObject","Footer","Main_templateObject2","renderJob","job","to","client","from","accomplishments","src_AccomplishmentComponent","Object","assign","renderFormation","formation","organizer","renderRealisation","realisation","context","objectives","o","l","renderTalk","talk","organization","Main","_this$props$summary","jobs","formations","realisations","talks","ResumeContentType","classCallCheck","json","setPrototypeOf","prototype","require","jsonFr","URLSearchParams","substring","window","indexOf","get","resumeContent","desserialize","headerStyle","App_templateObject","asideStyle","App_templateObject2","mainStyle","App_templateObject3","App_templateObject4","App","App_Container","src_ResumeHeader","src_AsideContent","src_Main","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","src_App","document","getElementById","URL","process","toString","origin","addEventListener","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5c710d9e.chunk.js","sourcesContent":["import * as React from 'react';\nimport { ReactChild } from 'react';\nimport styled from 'react-emotion';\n\ninterface Props {\n    children?: ReactChild;\n}\n\nconst StyledTag = styled('span')`\n    color: white;\n    background-color: #50a3d9;\n    margin-right: 0.5rem;\n    padding: 0.1rem 0.4rem 0.1rem 0.4rem;\n    border-radius: 1rem;\n    white-space: nowrap;\n    \n    @media screen and (max-width: 1000px) {\n        margin-bottom: 0.3rem;\n    }\n`;\n\nconst Tag = (props: Props) => (\n    <StyledTag>\n        {props.children}\n    </StyledTag>\n);\n\nexport default Tag;\n","import * as React from 'react';\nimport Tag from './Tag';\nimport styled from 'react-emotion';\n\ninterface Props {\n    name: string;\n    className: string;\n    title: string;\n    summaryTags: string[];\n}\n\nconst TagsContainer = styled('span')`\n    display: flex; \n    flex-flow: row wrap;\n    justify-content: center;\n    @media print {\n        display: block;\n    }\n`;\n\nconst ResumeHeader = ({ name, title, summaryTags, className }: Props) => (\n    <div className={className}>\n        <h1>{name}</h1>\n        <h2>{title}</h2>\n        <TagsContainer>\n            {summaryTags.map(tag => (<Tag key={tag}>{tag}</Tag>))}\n        </TagsContainer>\n    </div>\n);\n\nexport default ResumeHeader;","import * as React from 'react';\nimport { Fragment } from 'react';\nimport { css } from 'emotion';\n\ninterface Props {\n    text: string;\n    className?: string;\n}\n\nconst reducedMarginTop = css`\n    margin-bottom: 0.2rem;    \n`;\n\n/**\n * replaces \\n by <p>\n * @param {string} text\n * @constructor\n */\nconst Paragraph = ({text, className}: Props) => {\n    const blocks = text.split('\\n');\n    const style = className === 'reducedMarginTop' ? reducedMarginTop : undefined;\n    return (\n        <Fragment>\n            {blocks.map((block, index) => (\n                <p key={index} className={style}>\n                    {block}\n                </p>\n            ))}\n        </Fragment>\n    );\n};\n\nexport default Paragraph;\n","import * as React from 'react';\nimport styled from 'react-emotion';\nimport { FaChain } from 'react-icons/lib/fa';\n\ninterface AnchorProps {\n    link: string;\n    label: string;\n}\nconst StyledAnchor = styled('div')`\n    display: flex;\n`;\n\nconst Anchor = ({link, label}: AnchorProps) => (\n    <StyledAnchor>\n        <a href={link}><FaChain />&nbsp;{label}</a>\n    </StyledAnchor>\n);\n\nexport default Anchor;\n","import React from \"react\";\nimport styled from \"react-emotion\";\n\nconst Container = styled(\"div\")`\n  position: relative;\n  top: -20px;\n  left: -15px;\n\n  @media screen and (max-width: 1000px) {\n    position: absolute;\n    top: 10px;\n    text-align: right;\n    width: 100vw;\n  }\n\n  @media print {\n    display: none;\n  }\n`;\n\ninterface Props {\n  lang: string;\n}\n\nconst LangSwitch: React.FunctionComponent<Props> = ({ lang }) =>\n  lang === \"fr\" ? (\n    <Container>\n      <a href={location.protocol + \"//\" + location.host + location.pathname}>\n        🇫🇷\n      </a>\n    </Container>\n  ) : (\n    <Container>\n      <a\n        href={\n          location.protocol +\n          \"//\" +\n          location.host +\n          location.pathname +\n          \"?lang=fr\"\n        }\n      >\n        🇬🇧\n      </a>\n    </Container>\n  );\n\nexport default LangSwitch;\n","import * as React from \"react\";\nimport styled from \"react-emotion\";\nimport {\n  FaLinkedinSquare,\n  FaGithub,\n  FaEnvelope,\n  FaPhone,\n  FaVideoCamera\n} from \"react-icons/lib/fa\";\nimport ResumeContentType from \"./model/ResumeContentType\";\nimport Paragraph from \"./Paragraph\";\nimport Anchor from \"./Anchor\";\nimport LangSwitch from \"./LangSwitch\";\n\ninterface Props {\n  resume: ResumeContentType;\n  lang: string;\n}\n\nconst Container = styled(\"div\")`\n  margin: 20px;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  text-align: left;\n  @media print {\n  }\n`;\n\nconst Image = styled(\"img\")`\n  width: 100%;\n\n  @media screen and (max-width: 800px) {\n    display: none;\n  }\n\n  @media screen and (max-width: 1000px) {\n    max-width: 100px;\n    position: absolute;\n    top: 10px;\n    left: 0;\n  }\n  @media print {\n    max-width: 4cm;\n    position: absolute;\n    top: 0;\n    right: 0;\n  }\n`;\n\nconst H3 = styled(\"h3\")`\n  margin-top: 0.5rem;\n  padding-top: 0.5rem;\n  border-top: 1px solid #ddd;\n\n  @media screen and (max-width: 1000px) {\n    display: none;\n  }\n`;\n\nconst LinksContainer = styled(\"div\")`\n  display: flex;\n\n  @media print {\n    display: block;\n    flex-direction: column;\n  }\n`;\n\nconst BigIconLink = styled(\"a\")`\n  flex: 1;\n  text-align: center;\n  > label {\n    display: none;\n  }\n\n  @media print {\n    text-align: left;\n\n    > svg {\n      display: none;\n    }\n\n    > label {\n      display: unset;\n      font-size: 0.8rem;\n      margin-right: 1cm;\n    }\n  }\n`;\n\nconst AnchorsContainer = styled(\"div\")`\n  position: fixed;\n  bottom: 10px;\n  background-color: white;\n  padding: 0.2rem 1rem 0.2rem 1rem;\n  border-radius: 1rem;\n  border: 1px solid grey;\n\n  @media print {\n    display: none;\n  }\n\n  @media screen and (max-width: 1000px) {\n    border: none;\n    background-color: #ccc;\n    padding: 0.2rem 0.5rem 0.2rem 0.5rem;\n    right: 5px;\n    bottom: 5px;\n  }\n`;\n\nconst AsideContent = (props: Props) => {\n  const { phone, email } = props.resume.identity;\n  const phoneNumberWithoutSpace = phone.replace(\" \", \"\");\n  const { about } = props.resume.summary;\n  const { links } = props.resume;\n\n  const linkedInLink = links.find(link => link.title === \"LinkedIn\");\n  const githubLink = links.find(link => link.title === \"github\");\n  const talkLink = links.find(link => link.title === \"Talk\");\n  return (\n    <Container>\n      <LangSwitch lang={props.lang} />\n      <span>\n        <Image src=\"./images/me.jpg\" />\n      </span>\n\n      <H3>Presentation</H3>\n      <Paragraph text={about} />\n\n      <H3>Contact</H3>\n      <LinksContainer>\n        <BigIconLink href={`mailto:${email}`}>\n          <FaEnvelope size={30} />\n          <label>{email}</label> {/* visible only in print mode */}\n        </BigIconLink>\n\n        <BigIconLink href={`tel:${phoneNumberWithoutSpace}`}>\n          <FaPhone size={30} />\n          <label>{phone}</label> {/* visible only in print mode */}\n        </BigIconLink>\n      </LinksContainer>\n\n      <H3>Links</H3>\n      <LinksContainer>\n        {linkedInLink && (\n          <BigIconLink href={linkedInLink.url}>\n            <FaLinkedinSquare size={30} />\n            <label>{linkedInLink.url.replace(\"https://\", \"\")}</label>\n          </BigIconLink>\n        )}\n        {githubLink && (\n          <BigIconLink href={githubLink.url}>\n            <FaGithub size={30} />\n            <label>{githubLink.url.replace(\"https://\", \"\")}</label>\n          </BigIconLink>\n        )}\n        {talkLink && (\n          <BigIconLink href={talkLink.url}>\n            <FaVideoCamera size={30} />\n            <label>{talkLink.label}</label>\n          </BigIconLink>\n        )}\n      </LinksContainer>\n\n      <AnchorsContainer id=\"innerLinks\">\n        <Anchor link=\"#talks\" label=\"Talks\" />\n        <Anchor link=\"#experiences\" label=\"Experiences\" />\n        <Anchor link=\"#side-projects\" label=\"Side projects\" />\n        <Anchor link=\"#formations\" label=\"Formations\" />\n      </AnchorsContainer>\n    </Container>\n  );\n};\n\nexport default AsideContent;\n","import styled from 'react-emotion';\n\nconst TagsContainer = styled('div')`\n    margin-top: 0.5rem;\n`;\n\nexport default TagsContainer;\n","import * as React from 'react';\nimport styled from 'react-emotion';\n\ninterface Props {\n    children: string;\n}\n\nconst Styled = styled('label')`\n    color: #50a3d9;\n    font-style: italic;\n`;\n\nclass LightTag extends React.Component<Props> {\n    render() {\n        return (\n            <Styled>{this.props.children}&nbsp; </Styled>\n        );\n    }\n}\n\nexport default LightTag;\n","import * as React from \"react\";\nimport Accomplishment from \"./model/Accomplishment\";\nimport Paragraph from \"./Paragraph\";\nimport TagsContainer from \"./TagsContainer\";\nimport LightTag from \"./LightTag\";\n\nclass AccomplishmentComponent extends React.Component<Accomplishment> {\n  render() {\n    const { description, tags } = this.props;\n    return (\n      <section>\n        <Paragraph className=\"reducedMarginTop\" text={description} />\n        <TagsContainer>\n          {tags && tags.map((t, index) => <LightTag key={`${t}${index}`}>{t}</LightTag>)}\n        </TagsContainer>\n      </section>\n    );\n  }\n}\n\nexport default AccomplishmentComponent;\n","import * as React from 'react';\nimport styled from 'react-emotion';\nimport ResumeContentType from './model/ResumeContentType';\nimport Job from './model/Job';\nimport { ReactChild } from 'react';\nimport AccomplishmentComponent from './AccomplishmentComponent';\nimport Formation from './model/Formation';\nimport Realisation from './model/Realisation';\nimport Paragraph from './Paragraph';\nimport TagsContainer from './TagsContainer';\nimport LightTag from './LightTag';\nimport Link from './model/Link';\nimport Anchor from './Anchor';\nimport Talk from \"./model/Talk\";\n\nconst ExperiencesContainer = styled('div')`\n    text-align: start;\n    padding-left: 1rem;\n    margin-top: 2rem;\n    width: 90%;\n`;\n\nconst Footer = styled('div')`\n    margin-bottom: 4rem;\n`;\n\nfunction renderJob(job: Job): ReactChild {\n    const to = job.to ? ` - ${job.to}` : '';\n    const client = `${job.client} · ${job.from} ${to}`;\n    return (\n        <div key={`${job.from}-${job.client}`}>\n            <h3>{job.title}</h3>\n            <h4>{client}</h4>\n            {job.accomplishments\n            && job.accomplishments.map((a, index) => <AccomplishmentComponent key={index} {...a} />)}\n        </div>\n    );\n}\n\nfunction renderFormation(formation: Formation): ReactChild {\n    const to = formation.to ? ` - ${formation.to}` : '';\n    const client = `${formation.organizer} · ${formation.from} ${to}`;\n    return (\n        <section key={formation.from}>\n            <h3>{formation.title}</h3>\n            <h4>{client}</h4>\n        </section>\n    );\n}\n\nfunction renderRealisation(realisation: Realisation): ReactChild {\n    return (\n        <div key={realisation.name}>\n            <h3>{realisation.name}</h3>\n            <section>\n                {realisation.context && <Paragraph text={realisation.context} />}\n                {realisation.objectives && renderObjectives(realisation.objectives)}\n                {realisation.links && renderProjectLinks(realisation.links)}\n                <TagsContainer>\n                    {realisation.tags &&\n                        realisation.tags.map((t, index) => (<LightTag key={index}>{t}</LightTag>))\n                    }\n                </TagsContainer>\n            </section>\n        </div>\n    );\n}\n\nfunction renderObjectives(objectives: string[]): ReactChild {\n    return (\n        <React.Fragment>\n            <h4>Objectives</h4>\n            <ul>\n                {objectives.map(o => (<li>{o}</li>))}\n            </ul>\n        </React.Fragment>\n    );\n}\n\nfunction renderProjectLinks(links: Link[]): ReactChild {\n    return (\n        <React.Fragment>\n            <h4>Links</h4>\n            <ul>\n                {links.map(l => (\n                    <Anchor link={l.url} label={l.title} key={l.title} />\n                ))}\n            </ul>\n        </React.Fragment>\n    );\n}\n\nfunction renderTalk(talk: Talk): ReactChild {\n    return (\n        <div key={talk.url}>\n            <h3><a href={talk.url}>{talk.title}</a></h3>\n            <section>{talk.organization}</section>\n        </div>\n    )\n}\n\nclass Main extends React.Component<ResumeContentType> {\n    render() {\n        const { jobs, formations } = this.props.summary;\n        const { realisations, talks } = this.props;\n        return (\n            <ExperiencesContainer>\n                <h1 id=\"talks\">TALKS</h1>\n                {talks.map(renderTalk)}\n                <h1 id=\"experiences\">EXPERIENCES</h1>\n                {jobs.map(renderJob)}\n                <h1 id=\"side-projects\">SIDE PROJECTS</h1>\n                {realisations.map(renderRealisation)}\n                <h1 id=\"formations\">FORMATIONS</h1>\n                {formations.map(renderFormation)}\n                <Footer />\n            </ExperiencesContainer>\n        );\n    }\n}\n\nexport default Main;","import Identity from './Identity';\nimport Summary from './Summary';\nimport Link from './Link';\nimport Realisation from './Realisation';\nimport Talk from \"./Talk\";\n\nexport default class ResumeContentType {\n\n    static desserialize(json: any): ResumeContentType {\n        return Object.setPrototypeOf(json, ResumeContentType.prototype);\n    }\n\n    constructor(\n        public identity: Identity,\n        public summary: Summary,\n        public links: Link[],\n        public realisations: Realisation[],\n        public lang: string,\n        public talks: Talk[],\n    ) { }\n\n}","import * as React from 'react';\nimport { css } from 'react-emotion';\nimport styled  from 'react-emotion';\nimport ResumeHeader from './ResumeHeader';\nimport AsideContent from './AsideContent';\nimport Main from './Main';\nimport ResumeContentType from \"./model/ResumeContentType\";\nconst json = require('./content/resume.json');\nconst jsonFr = require('./content/resume.fr.json');\n\nconst params = new URLSearchParams(location.href.substring(window.location.href.indexOf('?') + 1));\nconst lang = params.get('lang') || 'en';\nconst resumeContent = ResumeContentType.desserialize(lang === 'fr' ? jsonFr : json);\n\nconst headerStyle = css`\n    grid-area: header;\n    @media print {\n        text-align: left;\n    }\n`;\n\nconst asideStyle = css`\n    grid-area: aside;\n    border-right: 2px solid #ddd;\n    display: flex;\n    @media print {\n        border: none;\n        display: block;\n    }\n`;\n\nconst mainStyle = css`\n    grid-area: content;\n`;\n\nconst Container = styled('div')`\n    text-align: center;\n    height: 100%;\n    background-color: white;\n    display: grid;\n    grid-template-columns: 250px 1fr;\n    grid-template-areas:\n            \"aside header\"\n            \"aside content\";\n            \n    @media screen {\n        box-shadow: 0 12px 15px 6px rgba(0, 0, 0, 0.7);\n        width: 1000px;\n        margin: 10px 0 10px 0;\n    }\n    \n    h1 {\n        page-break-before: auto;\n    }\n    \n    @media print {\n        display: block;\n        width: 100%;\n    }\n    \n    @media screen and (max-width: 1000px) {\n        grid-template-areas: \"header\" \"aside\" \"content\";\n        grid-template-columns: 1fr;\n    }\n`;\n\nclass App extends React.Component {\n\n    render() {\n        return (\n            //<LangContext.Provider value={lang}>\n                <Container>\n                    <ResumeHeader\n                        className={headerStyle}\n                        name={resumeContent.identity.name}\n                        title={resumeContent.summary.title}\n                        summaryTags={resumeContent.summary.tags}\n                    />\n                    <aside className={asideStyle}>\n                        <AsideContent resume={resumeContent} lang={lang}/>\n                    </aside>\n                    <article className={mainStyle}>\n                        <Main {...resumeContent} lang={lang}/>\n                    </article>\n                </Container>\n            // </LangContext.Provider>\n        );\n    }\n}\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}