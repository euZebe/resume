{"version":3,"sources":["Tag.tsx","ResumeHeader.tsx","Paragraph.tsx","Anchor.tsx","AsideContent.tsx","TagsContainer.tsx","LightTag.tsx","AccomplishmentComponent.tsx","Main.tsx","model/ResumeContentType.ts","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["StyledTag","styled","_templateObject","Tag","props","react","children","TagsContainer","ResumeHeader_templateObject","ResumeHeader","_ref","name","title","summaryTags","className","map","tag","src_Tag","reducedMarginTop","css","Paragraph_templateObject","Paragraph","text","blocks","split","style","undefined","block","index","key","StyledAnchor","Anchor_templateObject","Anchor","link","label","href","fa","Container","AsideContent_templateObject","Image","_templateObject2","H3","_templateObject3","LinksContainer","_templateObject4","BigIconLink","_templateObject5","AnchorsContainer","_templateObject6","AsideContent","_props$resume$identit","resume","identity","phone","email","phoneNumberWithoutSpace","replace","about","summary","links","linkedInLink","find","githubLink","talkLink","src","src_Paragraph","concat","size","url","id","src_Anchor","TagsContainer_templateObject","Styled","LightTag_templateObject","LightTag","this","React","AccomplishmentComponent","_this$props","description","tags","src_TagsContainer","t","src_LightTag","ExperiencesContainer","Main_templateObject","Footer","Main_templateObject2","renderJob","job","to","client","from","accomplishments","a","src_AccomplishmentComponent","Object","assign","renderFormation","formation","organizer","renderRealisation","realisation","context","objectives","o","l","renderTalk","talk","organization","Main","_this$props$summary","jobs","formations","realisations","talks","ResumeContentType","lang","classCallCheck","json","setPrototypeOf","prototype","require","jsonFr","window","location","endsWith","resumeContent","desserialize","headerStyle","App_templateObject","asideStyle","App_templateObject2","mainStyle","App_templateObject3","App_templateObject4","App","App_Container","src_ResumeHeader","src_AsideContent","src_Main","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","src_App","document","getElementById","URL","process","toString","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8a3d58dc.chunk.js","sourcesContent":["import * as React from 'react';\nimport { ReactChild } from 'react';\nimport styled from 'react-emotion';\n\ninterface Props {\n    children?: ReactChild;\n}\n\nconst StyledTag = styled('span')`\n    color: white;\n    background-color: #50a3d9;\n    margin-right: 0.5rem;\n    padding: 0.1rem 0.4rem 0.1rem 0.4rem;\n    border-radius: 1rem;\n    white-space: nowrap;\n    \n    @media screen and (max-width: 1000px) {\n        margin-bottom: 0.3rem;\n    }\n`;\n\nconst Tag = (props: Props) => (\n    <StyledTag>\n        {props.children}\n    </StyledTag>\n);\n\nexport default Tag;\n","import * as React from 'react';\nimport Tag from './Tag';\nimport styled from 'react-emotion';\n\ninterface Props {\n    name: string;\n    className: string;\n    title: string;\n    summaryTags: string[];\n}\n\nconst TagsContainer = styled('span')`\n    display: flex; \n    flex-flow: row wrap;\n    justify-content: center;\n    @media print {\n        display: block;\n    }\n`;\n\nconst ResumeHeader = ({ name, title, summaryTags, className }: Props) => (\n    <div className={className}>\n        <h1>{name}</h1>\n        <h2>{title}</h2>\n        <TagsContainer>\n            {summaryTags.map(tag => (<Tag>{tag}</Tag>))}\n        </TagsContainer>\n    </div>\n);\n\nexport default ResumeHeader;","import * as React from 'react';\nimport { Fragment } from 'react';\nimport { css } from 'emotion';\n\ninterface Props {\n    text: string;\n    className?: string;\n}\n\nconst reducedMarginTop = css`\n    margin-bottom: 0.2rem;    \n`;\n\n/**\n * replaces \\n by <p>\n * @param {string} text\n * @constructor\n */\nconst Paragraph = ({text, className}: Props) => {\n    const blocks = text.split('\\n');\n    const style = className === 'reducedMarginTop' ? reducedMarginTop : undefined;\n    return (\n        <Fragment>\n            {blocks.map((block, index) => (\n                <p key={index} className={style}>\n                    {block}\n                </p>\n            ))}\n        </Fragment>\n    );\n};\n\nexport default Paragraph;\n","import * as React from 'react';\nimport styled from 'react-emotion';\nimport { FaChain } from 'react-icons/lib/fa';\n\ninterface AnchorProps {\n    link: string;\n    label: string;\n}\nconst StyledAnchor = styled('div')`\n    display: flex;\n`;\n\nconst Anchor = ({link, label}: AnchorProps) => (\n    <StyledAnchor>\n        <a href={link}><FaChain />&nbsp;{label}</a>\n    </StyledAnchor>\n);\n\nexport default Anchor;\n","import * as React from 'react';\nimport styled from 'react-emotion';\nimport { FaLinkedinSquare, FaGithub, FaEnvelope, FaPhone, FaVideoCamera } from 'react-icons/lib/fa';\nimport ResumeContentType from './model/ResumeContentType';\nimport Paragraph from './Paragraph';\nimport Anchor from './Anchor';\n\ninterface Props {\n    resume: ResumeContentType;\n}\n\nconst Container = styled('div')`\n    margin: 20px;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    text-align: left;\n    @media print {\n    \n    }\n`;\n\nconst Image = styled('img')`\n    width: 100%;\n    e\n    @media screen and (max-width: 1000px) {\n        width: auto;\n        height: 100px;\n    }\n    @media print {\n        max-width: 4cm;\n        position: absolute;\n        top: 0;\n        right: 0;\n    }\n`;\n\nconst H3 = styled('h3')`\n    margin-top: 0.5rem;\n    padding-top: 0.5rem;\n    border-top: 1px solid #ddd;\n    \n    @media screen and (max-width:1000px) {\n        display: none;\n    }\n`;\n\nconst LinksContainer = styled('div')`\n    display: flex;\n    \n    @media print {\n        display: block;\n        flex-direction: column;\n    }\n`;\n\nconst BigIconLink = styled('a')`\n    flex: 1;\n    text-align: center;\n    > label {\n        display: none;\n    }\n    \n    @media print {\n        text-align: left;\n        \n        > svg {\n            display: none;\n        }\n        \n        > label {\n            display: unset;\n            font-size: 0.8rem;\n            margin-right: 1cm;\n        }\n    }\n`;\n\nconst AnchorsContainer = styled('div')`\n    position: fixed;\n    bottom: 10px;\n    background-color: white;\n    padding: 0.2rem 1rem 0.2rem 1rem;\n    border-radius: 1rem;\n    border: 1px solid grey;\n    \n    @media print {\n        display: none;\n    }\n   \n    @media screen and (max-width: 1000px) {\n        border: none;\n        background-color: #ccc;\n        padding: 0.2rem 0.5rem 0.2rem 0.5rem;\n        right: 5px;\n        bottom: 5px;\n    }\n`;\n\nconst AsideContent = (props: Props) => {\n    const { phone, email }  = props.resume.identity;\n    const phoneNumberWithoutSpace = phone.replace(' ', '');\n    const { about } = props.resume.summary;\n    const { links } = props.resume;\n\n    const linkedInLink = links.find(link => link.title === 'LinkedIn');\n    const githubLink = links.find(link => link.title === 'github');\n    const talkLink = links.find(link => link.title === 'Talk');\n    return (\n        <Container>\n\n            <span>\n                <Image src=\"./images/me.jpg\" />\n            </span>\n\n            <H3>Presentation</H3>\n            <Paragraph text={about} />\n\n            <H3>Contact</H3>\n            <LinksContainer>\n                <BigIconLink href={`mailto:${email}`}>\n                    <FaEnvelope size={30}/>\n                    <label>{email}</label> {/* visible only in print mode */}\n                </BigIconLink>\n\n                <BigIconLink href={`tel:${phoneNumberWithoutSpace}`}>\n                    <FaPhone size={30}/>\n                    <label>{phone}</label> {/* visible only in print mode */}\n                </BigIconLink>\n\n            </LinksContainer>\n\n            <H3>Links</H3>\n            <LinksContainer>\n                {linkedInLink &&\n                    <BigIconLink href={linkedInLink.url}>\n                        <FaLinkedinSquare size={30}/>\n                        <label>{linkedInLink.url.replace('https://', '')}</label>\n                    </BigIconLink>\n                }\n                {githubLink &&\n                    <BigIconLink href={githubLink.url}>\n                        <FaGithub size={30}/>\n                        <label>{githubLink.url.replace('https://', '')}</label>\n                    </BigIconLink>\n                }\n                {talkLink &&\n                    <BigIconLink href={talkLink.url}>\n                        <FaVideoCamera size={30}/>\n                        <label>{talkLink.label}</label>\n                    </BigIconLink>\n                }\n            </LinksContainer>\n\n            <AnchorsContainer id=\"innerLinks\">\n                <Anchor link=\"#talks\" label=\"Talks\" />\n                <Anchor link=\"#experiences\" label=\"Experiences\" />\n                <Anchor link=\"#side-projects\" label=\"Side projects\" />\n                <Anchor link=\"#formations\" label=\"Formations\" />\n            </AnchorsContainer>\n        </Container>\n    );\n};\n\nexport default AsideContent;","import styled from 'react-emotion';\n\nconst TagsContainer = styled('div')`\n    margin-top: 0.5rem;\n`;\n\nexport default TagsContainer;\n","import * as React from 'react';\nimport styled from 'react-emotion';\n\ninterface Props {\n    children: string;\n}\n\nconst Styled = styled('label')`\n    color: #50a3d9;\n    font-style: italic;\n`;\n\nclass LightTag extends React.Component<Props> {\n    render() {\n        return (\n            <Styled>{this.props.children}&nbsp; </Styled>\n        );\n    }\n}\n\nexport default LightTag;\n","import * as React from 'react';\nimport Accomplishment from './model/Accomplishment';\nimport Paragraph from './Paragraph';\nimport TagsContainer from './TagsContainer';\nimport LightTag from './LightTag';\n\nclass AccomplishmentComponent extends React.Component<Accomplishment> {\n    render() {\n        const { description, tags } = this.props;\n        return (\n            <section>\n                <Paragraph className=\"reducedMarginTop\" text={description} />\n                <TagsContainer>\n                    {tags && tags.map(t => (\n                        <LightTag>{t}</LightTag>\n                    ))}\n                </TagsContainer>\n            </section>\n        );\n    }\n}\n\nexport default AccomplishmentComponent;\n","import * as React from 'react';\nimport styled from 'react-emotion';\nimport ResumeContentType from './model/ResumeContentType';\nimport Job from './model/Job';\nimport { ReactChild } from 'react';\nimport AccomplishmentComponent from './AccomplishmentComponent';\nimport Formation from './model/Formation';\nimport Realisation from './model/Realisation';\nimport Paragraph from './Paragraph';\nimport TagsContainer from './TagsContainer';\nimport LightTag from './LightTag';\nimport Link from './model/Link';\nimport Anchor from './Anchor';\nimport Talk from \"./model/Talk\";\n\nconst ExperiencesContainer = styled('div')`\n    text-align: start;\n    padding-left: 1rem;\n    margin-top: 2rem;\n    width: 90%;\n`;\n\nconst Footer = styled('div')`\n    margin-bottom: 4rem;\n`;\n\nfunction renderJob(job: Job): ReactChild {\n    const to = job.to ? ` - ${job.to}` : '';\n    const client = `${job.client} · ${job.from} ${to}`;\n    return (\n        <div key={job.from}>\n            <h3>{job.title}</h3>\n            <h4>{client}</h4>\n            {job.accomplishments\n            && job.accomplishments.map((a, index) => <AccomplishmentComponent key={index} {...a} />)}\n        </div>\n    );\n}\n\nfunction renderFormation(formation: Formation): ReactChild {\n    const to = formation.to ? ` - ${formation.to}` : '';\n    const client = `${formation.organizer} · ${formation.from} ${to}`;\n    return (\n        <section key={formation.from}>\n            <h3>{formation.title}</h3>\n            <h4>{client}</h4>\n        </section>\n    );\n}\n\nfunction renderRealisation(realisation: Realisation): ReactChild {\n    return (\n        <div>\n            <h3>{realisation.name}</h3>\n            <section>\n                {realisation.context && <Paragraph text={realisation.context} />}\n                {realisation.objectives && renderObjectives(realisation.objectives)}\n                {realisation.links && renderProjectLinks(realisation.links)}\n                <TagsContainer>\n                    {realisation.tags &&\n                        realisation.tags.map(t => (<LightTag>{t}</LightTag>))\n                    }\n                </TagsContainer>\n            </section>\n        </div>\n    );\n}\n\nfunction renderObjectives(objectives: string[]): ReactChild {\n    return (\n        <React.Fragment>\n            <h4>Objectives</h4>\n            <ul>\n                {objectives.map(o => (<li>{o}</li>))}\n            </ul>\n        </React.Fragment>\n    );\n}\n\nfunction renderProjectLinks(links: Link[]): ReactChild {\n    return (\n        <React.Fragment>\n            <h4>Links</h4>\n            <ul>\n                {links.map(l => (\n                    <Anchor link={l.url} label={l.title} />\n                ))}\n            </ul>\n        </React.Fragment>\n    );\n}\n\nfunction renderTalk(talk: Talk): ReactChild {\n    return (\n        <div key={talk.url}>\n            <h3><a href={talk.url}>{talk.title}</a></h3>\n            <section>{talk.organization}</section>\n        </div>\n    )\n}\n\nclass Main extends React.Component<ResumeContentType> {\n    render() {\n        const { jobs, formations } = this.props.summary;\n        const { realisations, talks } = this.props;\n        return (\n            <ExperiencesContainer>\n                <h1 id=\"talks\">PUBLIC TALKS</h1>\n                {talks.map(renderTalk)}\n                <h1 id=\"experiences\">EXPERIENCES</h1>\n                {jobs.map(renderJob)}\n                <h1 id=\"side-projects\">SIDE PROJECTS</h1>\n                {realisations.map(renderRealisation)}\n                <h1 id=\"formations\">FORMATIONS</h1>\n                {formations.map(renderFormation)}\n                <Footer />\n            </ExperiencesContainer>\n        );\n    }\n}\n\nexport default Main;","import Identity from './Identity';\nimport Summary from './Summary';\nimport Link from './Link';\nimport Realisation from './Realisation';\nimport Talk from \"./Talk\";\n\nexport default class ResumeContentType {\n\n    static desserialize(json: any): ResumeContentType {\n        return Object.setPrototypeOf(json, ResumeContentType.prototype);\n    }\n\n    constructor(\n        public identity: Identity,\n        public summary: Summary,\n        public links: Link[],\n        public realisations: Realisation[],\n        public lang: string,\n        public talks: Talk[],\n    ) { }\n\n}","import * as React from 'react';\nimport { css } from 'react-emotion';\nimport styled  from 'react-emotion';\n// import LangContext from './LangContext';\nimport ResumeHeader from './ResumeHeader';\nimport AsideContent from './AsideContent';\nimport Main from './Main';\nimport ResumeContentType from \"./model/ResumeContentType\";\nconst json = require('./content/resume.json');\nconst jsonFr = require('./content/resume.fr.json');\n\nconst lang = window.location.href.endsWith('/fr') ? 'fr' : 'en';\nconst resumeContent = ResumeContentType.desserialize(lang === 'fr' ? jsonFr : json);\n\nconst headerStyle = css`\n    grid-area: header;\n    @media print {\n        text-align: left;\n    }\n`;\n\nconst asideStyle = css`\n    grid-area: aside;\n    border-right: 2px solid #ddd;\n    display: flex;\n    @media print {\n        border: none;\n        display: block;\n    }\n`;\n\nconst mainStyle = css`\n    grid-area: content;\n`;\n\nconst Container = styled('div')`\n    text-align: center;\n    height: 100%;\n    background-color: white;\n    display: grid;\n    grid-template-columns: 250px 1fr;\n    grid-template-areas:\n            \"aside header\"\n            \"aside content\";\n            \n    @media screen {\n        box-shadow: 0 12px 15px 6px rgba(0, 0, 0, 0.7);\n        width: 1000px;\n        margin: 10px 0 10px 0;\n    }\n    \n    h1 {\n        page-break-before: auto;\n    }\n    \n    @media print {\n        display: block;\n        width: 100%;\n    }\n    \n    @media screen and (max-width: 1000px) {\n        grid-template-areas: \"header\" \"aside\" \"content\";\n        grid-template-columns: 1fr;\n    }\n`;\n\nclass App extends React.Component {\n\n    render() {\n        return (\n            //<LangContext.Provider value={lang}>\n                <Container>\n                    <ResumeHeader\n                        className={headerStyle}\n                        name={resumeContent.identity.name}\n                        title={resumeContent.summary.title}\n                        summaryTags={resumeContent.summary.tags}\n                    />\n                    <aside className={asideStyle}>\n                        <AsideContent resume={resumeContent}/>\n                    </aside>\n                    <article className={mainStyle}>\n                        <Main {...resumeContent} lang={lang}/>\n                    </article>\n                </Container>\n            // </LangContext.Provider>\n        );\n    }\n}\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}