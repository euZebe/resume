{"version":3,"sources":["Tag.tsx","ResumeHeader.tsx","Paragraph.tsx","Anchor.tsx","LangSwitch.tsx","AsideContent.tsx","TagsContainer.tsx","LightTag.tsx","AccomplishmentComponent.tsx","Main.tsx","model/ResumeContentType.ts","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["StyledTag","styled","_templateObject","Tag","props","react","children","TagsContainer","ResumeHeader_templateObject","ResumeHeader","_ref","name","title","summaryTags","className","map","tag","src_Tag","key","reducedMarginTop","css","Paragraph_templateObject","Paragraph","text","blocks","split","style","undefined","block","index","StyledAnchor","Anchor_templateObject","Anchor","link","label","href","fa","Container","LangSwitch_templateObject","LangSwitch","lang","react_default","a","createElement","location","protocol","host","pathname","AsideContent_templateObject","Image","_templateObject2","H3","_templateObject3","LinksContainer","_templateObject4","BigIconLink","_templateObject5","AnchorsContainer","_templateObject6","AsideContent","_props$resume$identit","resume","identity","phone","email","phoneNumberWithoutSpace","replace","about","summary","links","linkedInLink","find","githubLink","talkLink","AsideContent_Container","src_LangSwitch","src","src_Paragraph","concat","size","url","id","src_Anchor","TagsContainer_templateObject","Styled","LightTag_templateObject","LightTag","this","React","AccomplishmentComponent","_this$props","description","tags","src_TagsContainer","t","src_LightTag","ExperiencesContainer","Main_templateObject","Footer","Main_templateObject2","renderJob","job","to","client","from","accomplishments","src_AccomplishmentComponent","Object","assign","renderFormation","formation","organizer","renderRealisation","realisation","context","objectives","o","l","renderTalk","talk","organization","Main","_this$props$summary","jobs","formations","realisations","talks","ResumeContentType","classCallCheck","json","setPrototypeOf","prototype","require","jsonFr","URLSearchParams","substring","window","indexOf","get","resumeContent","desserialize","headerStyle","App_templateObject","asideStyle","App_templateObject2","mainStyle","App_templateObject3","App_templateObject4","App","App_Container","src_ResumeHeader","src_AsideContent","src_Main","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","src_App","document","getElementById","URL","process","toString","origin","addEventListener","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d7103375.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { ReactChild } from 'react';\r\nimport styled from 'react-emotion';\r\n\r\ninterface Props {\r\n    children?: ReactChild;\r\n}\r\n\r\nconst StyledTag = styled('span')`\r\n    color: white;\r\n    background-color: #50a3d9;\r\n    margin-right: 0.5rem;\r\n    padding: 0.1rem 0.4rem 0.1rem 0.4rem;\r\n    border-radius: 1rem;\r\n    white-space: nowrap;\r\n    \r\n    @media screen and (max-width: 1000px) {\r\n        margin-bottom: 0.3rem;\r\n    }\r\n`;\r\n\r\nconst Tag = (props: Props) => (\r\n    <StyledTag>\r\n        {props.children}\r\n    </StyledTag>\r\n);\r\n\r\nexport default Tag;\r\n","import * as React from 'react';\r\nimport Tag from './Tag';\r\nimport styled from 'react-emotion';\r\n\r\ninterface Props {\r\n    name: string;\r\n    className: string;\r\n    title: string;\r\n    summaryTags: string[];\r\n}\r\n\r\nconst TagsContainer = styled('span')`\r\n    display: flex; \r\n    flex-flow: row wrap;\r\n    justify-content: center;\r\n    @media print {\r\n        display: block;\r\n    }\r\n`;\r\n\r\nconst ResumeHeader = ({ name, title, summaryTags, className }: Props) => (\r\n    <div className={className}>\r\n        <h1>{name}</h1>\r\n        <h2>{title}</h2>\r\n        <TagsContainer>\r\n            {summaryTags.map(tag => (<Tag key={tag}>{tag}</Tag>))}\r\n        </TagsContainer>\r\n    </div>\r\n);\r\n\r\nexport default ResumeHeader;","import * as React from 'react';\r\nimport { Fragment } from 'react';\r\nimport { css } from 'emotion';\r\n\r\ninterface Props {\r\n    text: string;\r\n    className?: string;\r\n}\r\n\r\nconst reducedMarginTop = css`\r\n    margin-bottom: 0.2rem;    \r\n`;\r\n\r\n/**\r\n * replaces \\n by <p>\r\n * @param {string} text\r\n * @constructor\r\n */\r\nconst Paragraph = ({text, className}: Props) => {\r\n    const blocks = text.split('\\n');\r\n    const style = className === 'reducedMarginTop' ? reducedMarginTop : undefined;\r\n    return (\r\n        <Fragment>\r\n            {blocks.map((block, index) => (\r\n                <p key={index} className={style}>\r\n                    {block}\r\n                </p>\r\n            ))}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Paragraph;\r\n","import * as React from 'react';\r\nimport styled from 'react-emotion';\r\nimport { FaChain } from 'react-icons/lib/fa';\r\n\r\ninterface AnchorProps {\r\n    link: string;\r\n    label: string;\r\n}\r\nconst StyledAnchor = styled('div')`\r\n    display: flex;\r\n`;\r\n\r\nconst Anchor = ({link, label}: AnchorProps) => (\r\n    <StyledAnchor>\r\n        <a href={link}><FaChain />&nbsp;{label}</a>\r\n    </StyledAnchor>\r\n);\r\n\r\nexport default Anchor;\r\n","import React from \"react\";\r\nimport styled from \"react-emotion\";\r\n\r\nconst Container = styled(\"div\")`\r\n  position: relative;\r\n  top: -20px;\r\n  left: -15px;\r\n\r\n  @media screen and (max-width: 1000px) {\r\n    position: absolute;\r\n    top: 10px;\r\n    text-align: right;\r\n    width: 100vw;\r\n  }\r\n\r\n  @media print {\r\n    display: none;\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  lang: string;\r\n}\r\n\r\nconst LangSwitch: React.FunctionComponent<Props> = ({ lang }) =>\r\n  lang === \"fr\" ? (\r\n    <Container>\r\n      <a href={location.protocol + \"//\" + location.host + location.pathname}>\r\n        🇫🇷\r\n      </a>\r\n    </Container>\r\n  ) : (\r\n    <Container>\r\n      <a\r\n        href={\r\n          location.protocol +\r\n          \"//\" +\r\n          location.host +\r\n          location.pathname +\r\n          \"?lang=fr\"\r\n        }\r\n      >\r\n        🇬🇧\r\n      </a>\r\n    </Container>\r\n  );\r\n\r\nexport default LangSwitch;\r\n","import * as React from \"react\";\r\nimport styled from \"react-emotion\";\r\nimport {\r\n  FaLinkedinSquare,\r\n  FaGithub,\r\n  FaEnvelope,\r\n  FaPhone,\r\n  FaVideoCamera\r\n} from \"react-icons/lib/fa\";\r\nimport ResumeContentType from \"./model/ResumeContentType\";\r\nimport Paragraph from \"./Paragraph\";\r\nimport Anchor from \"./Anchor\";\r\nimport LangSwitch from \"./LangSwitch\";\r\n\r\ninterface Props {\r\n  resume: ResumeContentType;\r\n  lang: string;\r\n}\r\n\r\nconst Container = styled(\"div\")`\r\n  margin: 20px;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: left;\r\n  @media print {\r\n  }\r\n`;\r\n\r\nconst Image = styled(\"img\")`\r\n  width: 100%;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    display: none;\r\n  }\r\n\r\n  @media screen and (max-width: 1000px) {\r\n    max-width: 100px;\r\n    position: absolute;\r\n    top: 10px;\r\n    left: 0;\r\n  }\r\n  @media print {\r\n    max-width: 4cm;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n  }\r\n`;\r\n\r\nconst H3 = styled(\"h3\")`\r\n  margin-top: 0.5rem;\r\n  padding-top: 0.5rem;\r\n  border-top: 1px solid #ddd;\r\n\r\n  @media screen and (max-width: 1000px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst LinksContainer = styled(\"div\")`\r\n  display: flex;\r\n\r\n  @media print {\r\n    display: block;\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst BigIconLink = styled(\"a\")`\r\n  flex: 1;\r\n  text-align: center;\r\n  > label {\r\n    display: none;\r\n  }\r\n\r\n  @media print {\r\n    text-align: left;\r\n\r\n    > svg {\r\n      display: none;\r\n    }\r\n\r\n    > label {\r\n      display: unset;\r\n      font-size: 0.8rem;\r\n      margin-right: 1cm;\r\n    }\r\n  }\r\n`;\r\n\r\nconst AnchorsContainer = styled(\"div\")`\r\n  position: fixed;\r\n  bottom: 10px;\r\n  background-color: white;\r\n  padding: 0.2rem 1rem 0.2rem 1rem;\r\n  border-radius: 1rem;\r\n  border: 1px solid grey;\r\n\r\n  @media print {\r\n    display: none;\r\n  }\r\n\r\n  @media screen and (max-width: 1000px) {\r\n    border: none;\r\n    background-color: #ccc;\r\n    padding: 0.2rem 0.5rem 0.2rem 0.5rem;\r\n    right: 5px;\r\n    bottom: 5px;\r\n  }\r\n`;\r\n\r\nconst AsideContent = (props: Props) => {\r\n  const { phone, email } = props.resume.identity;\r\n  const phoneNumberWithoutSpace = phone.replace(\" \", \"\");\r\n  const { about } = props.resume.summary;\r\n  const { links } = props.resume;\r\n\r\n  const linkedInLink = links.find(link => link.title === \"LinkedIn\");\r\n  const githubLink = links.find(link => link.title === \"github\");\r\n  const talkLink = links.find(link => link.title === \"Talk\");\r\n  return (\r\n    <Container>\r\n      <LangSwitch lang={props.lang} />\r\n      <span>\r\n        <Image src=\"./images/me.jpg\" />\r\n      </span>\r\n\r\n      <H3>Presentation</H3>\r\n      <Paragraph text={about} />\r\n\r\n      <H3>Contact</H3>\r\n      <LinksContainer>\r\n        <BigIconLink href={`mailto:${email}`}>\r\n          <FaEnvelope size={30} />\r\n          <label>{email}</label> {/* visible only in print mode */}\r\n        </BigIconLink>\r\n\r\n        <BigIconLink href={`tel:${phoneNumberWithoutSpace}`}>\r\n          <FaPhone size={30} />\r\n          <label>{phone}</label> {/* visible only in print mode */}\r\n        </BigIconLink>\r\n      </LinksContainer>\r\n\r\n      <H3>Links</H3>\r\n      <LinksContainer>\r\n        {linkedInLink && (\r\n          <BigIconLink href={linkedInLink.url}>\r\n            <FaLinkedinSquare size={30} />\r\n            <label>{linkedInLink.url.replace(\"https://\", \"\")}</label>\r\n          </BigIconLink>\r\n        )}\r\n        {githubLink && (\r\n          <BigIconLink href={githubLink.url}>\r\n            <FaGithub size={30} />\r\n            <label>{githubLink.url.replace(\"https://\", \"\")}</label>\r\n          </BigIconLink>\r\n        )}\r\n        {talkLink && (\r\n          <BigIconLink href={talkLink.url}>\r\n            <FaVideoCamera size={30} />\r\n            <label>{talkLink.label}</label>\r\n          </BigIconLink>\r\n        )}\r\n      </LinksContainer>\r\n\r\n      <AnchorsContainer id=\"innerLinks\">\r\n        <Anchor link=\"#talks\" label=\"Talks\" />\r\n        <Anchor link=\"#experiences\" label=\"Experiences\" />\r\n        <Anchor link=\"#side-projects\" label=\"Side projects\" />\r\n        <Anchor link=\"#formations\" label=\"Formations\" />\r\n      </AnchorsContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AsideContent;\r\n","import styled from 'react-emotion';\r\n\r\nconst TagsContainer = styled('div')`\r\n    margin-top: 0.5rem;\r\n`;\r\n\r\nexport default TagsContainer;\r\n","import * as React from 'react';\r\nimport styled from 'react-emotion';\r\n\r\ninterface Props {\r\n    children: string;\r\n}\r\n\r\nconst Styled = styled('label')`\r\n    color: #50a3d9;\r\n    font-style: italic;\r\n`;\r\n\r\nclass LightTag extends React.Component<Props> {\r\n    render() {\r\n        return (\r\n            <Styled>{this.props.children}&nbsp; </Styled>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LightTag;\r\n","import * as React from \"react\";\r\nimport Accomplishment from \"./model/Accomplishment\";\r\nimport Paragraph from \"./Paragraph\";\r\nimport TagsContainer from \"./TagsContainer\";\r\nimport LightTag from \"./LightTag\";\r\n\r\nclass AccomplishmentComponent extends React.Component<Accomplishment> {\r\n  render() {\r\n    const { description, tags } = this.props;\r\n    return (\r\n      <section>\r\n        <Paragraph className=\"reducedMarginTop\" text={description} />\r\n        <TagsContainer>\r\n          {tags && tags.map((t, index) => <LightTag key={`${t}${index}`}>{t}</LightTag>)}\r\n        </TagsContainer>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccomplishmentComponent;\r\n","import * as React from 'react';\r\nimport styled from 'react-emotion';\r\nimport ResumeContentType from './model/ResumeContentType';\r\nimport Job from './model/Job';\r\nimport { ReactChild } from 'react';\r\nimport AccomplishmentComponent from './AccomplishmentComponent';\r\nimport Formation from './model/Formation';\r\nimport Realisation from './model/Realisation';\r\nimport Paragraph from './Paragraph';\r\nimport TagsContainer from './TagsContainer';\r\nimport LightTag from './LightTag';\r\nimport Link from './model/Link';\r\nimport Anchor from './Anchor';\r\nimport Talk from \"./model/Talk\";\r\n\r\nconst ExperiencesContainer = styled('div')`\r\n    text-align: start;\r\n    padding-left: 1rem;\r\n    margin-top: 2rem;\r\n    width: 90%;\r\n`;\r\n\r\nconst Footer = styled('div')`\r\n    margin-bottom: 4rem;\r\n`;\r\n\r\nfunction renderJob(job: Job): ReactChild {\r\n    const to = job.to ? ` - ${job.to}` : '';\r\n    const client = `${job.client} · ${job.from} ${to}`;\r\n    return (\r\n        <div key={`${job.from}-${job.client}`}>\r\n            <h3>{job.title}</h3>\r\n            <h4>{client}</h4>\r\n            {job.accomplishments\r\n            && job.accomplishments.map((a, index) => <AccomplishmentComponent key={index} {...a} />)}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction renderFormation(formation: Formation): ReactChild {\r\n    const to = formation.to ? ` - ${formation.to}` : '';\r\n    const client = `${formation.organizer} · ${formation.from} ${to}`;\r\n    return (\r\n        <section key={formation.from}>\r\n            <h3>{formation.title}</h3>\r\n            <h4>{client}</h4>\r\n        </section>\r\n    );\r\n}\r\n\r\nfunction renderRealisation(realisation: Realisation): ReactChild {\r\n    return (\r\n        <div key={realisation.name}>\r\n            <h3>{realisation.name}</h3>\r\n            <section>\r\n                {realisation.context && <Paragraph text={realisation.context} />}\r\n                {realisation.objectives && renderObjectives(realisation.objectives)}\r\n                {realisation.links && renderProjectLinks(realisation.links)}\r\n                <TagsContainer>\r\n                    {realisation.tags &&\r\n                        realisation.tags.map((t, index) => (<LightTag key={index}>{t}</LightTag>))\r\n                    }\r\n                </TagsContainer>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction renderObjectives(objectives: string[]): ReactChild {\r\n    return (\r\n        <React.Fragment>\r\n            <h4>Objectives</h4>\r\n            <ul>\r\n                {objectives.map(o => (<li>{o}</li>))}\r\n            </ul>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction renderProjectLinks(links: Link[]): ReactChild {\r\n    return (\r\n        <React.Fragment>\r\n            <h4>Links</h4>\r\n            <ul>\r\n                {links.map(l => (\r\n                    <Anchor link={l.url} label={l.title} key={l.title} />\r\n                ))}\r\n            </ul>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction renderTalk(talk: Talk): ReactChild {\r\n    return (\r\n        <div key={talk.url}>\r\n            <h3><a href={talk.url}>{talk.title}</a></h3>\r\n            <section>{talk.organization}</section>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass Main extends React.Component<ResumeContentType> {\r\n    render() {\r\n        const { jobs, formations } = this.props.summary;\r\n        const { realisations, talks } = this.props;\r\n        return (\r\n            <ExperiencesContainer>\r\n                <h1 id=\"talks\">TALKS</h1>\r\n                {talks.map(renderTalk)}\r\n                <h1 id=\"experiences\">EXPERIENCES</h1>\r\n                {jobs.map(renderJob)}\r\n                <h1 id=\"side-projects\">SIDE PROJECTS</h1>\r\n                {realisations.map(renderRealisation)}\r\n                <h1 id=\"formations\">FORMATIONS</h1>\r\n                {formations.map(renderFormation)}\r\n                <Footer />\r\n            </ExperiencesContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import Identity from './Identity';\r\nimport Summary from './Summary';\r\nimport Link from './Link';\r\nimport Realisation from './Realisation';\r\nimport Talk from \"./Talk\";\r\n\r\nexport default class ResumeContentType {\r\n\r\n    static desserialize(json: any): ResumeContentType {\r\n        return Object.setPrototypeOf(json, ResumeContentType.prototype);\r\n    }\r\n\r\n    constructor(\r\n        public identity: Identity,\r\n        public summary: Summary,\r\n        public links: Link[],\r\n        public realisations: Realisation[],\r\n        public lang: string,\r\n        public talks: Talk[],\r\n    ) { }\r\n\r\n}","import * as React from 'react';\r\nimport { css } from 'react-emotion';\r\nimport styled  from 'react-emotion';\r\nimport ResumeHeader from './ResumeHeader';\r\nimport AsideContent from './AsideContent';\r\nimport Main from './Main';\r\nimport ResumeContentType from \"./model/ResumeContentType\";\r\nconst json = require('./content/resume.json');\r\nconst jsonFr = require('./content/resume.fr.json');\r\n\r\nconst params = new URLSearchParams(location.href.substring(window.location.href.indexOf('?') + 1));\r\nconst lang = params.get('lang') || 'en';\r\nconst resumeContent = ResumeContentType.desserialize(lang === 'fr' ? jsonFr : json);\r\n\r\nconst headerStyle = css`\r\n    grid-area: header;\r\n    @media print {\r\n        text-align: left;\r\n    }\r\n`;\r\n\r\nconst asideStyle = css`\r\n    grid-area: aside;\r\n    border-right: 2px solid #ddd;\r\n    display: flex;\r\n    @media print {\r\n        border: none;\r\n        display: block;\r\n    }\r\n`;\r\n\r\nconst mainStyle = css`\r\n    grid-area: content;\r\n`;\r\n\r\nconst Container = styled('div')`\r\n    text-align: center;\r\n    height: 100%;\r\n    background-color: white;\r\n    display: grid;\r\n    grid-template-columns: 250px 1fr;\r\n    grid-template-areas:\r\n            \"aside header\"\r\n            \"aside content\";\r\n            \r\n    @media screen {\r\n        box-shadow: 0 12px 15px 6px rgba(0, 0, 0, 0.7);\r\n        width: 1000px;\r\n        margin: 10px 0 10px 0;\r\n    }\r\n    \r\n    h1 {\r\n        page-break-before: auto;\r\n    }\r\n    \r\n    @media print {\r\n        display: block;\r\n        width: 100%;\r\n    }\r\n    \r\n    @media screen and (max-width: 1000px) {\r\n        grid-template-areas: \"header\" \"aside\" \"content\";\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nclass App extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            //<LangContext.Provider value={lang}>\r\n                <Container>\r\n                    <ResumeHeader\r\n                        className={headerStyle}\r\n                        name={resumeContent.identity.name}\r\n                        title={resumeContent.summary.title}\r\n                        summaryTags={resumeContent.summary.tags}\r\n                    />\r\n                    <aside className={asideStyle}>\r\n                        <AsideContent resume={resumeContent} lang={lang}/>\r\n                    </aside>\r\n                    <article className={mainStyle}>\r\n                        <Main {...resumeContent} lang={lang}/>\r\n                    </article>\r\n                </Container>\r\n            // </LangContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// tslint:disable:no-console\r\n// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the 'N+1' visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL!,\r\n      window.location.toString()\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker) {\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a 'New content is\r\n                // available; please refresh.' message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // 'Content is cached for offline use.' message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        }\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type')!.indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}